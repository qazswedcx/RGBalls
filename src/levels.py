from os.path import join, exists
from os import makedirs
from threading import Timer
import dill

from const import lwr
from items import LilyPlant, Gun
from objects import Player, Ball, Box, Diamond, Portal, Cannon, Envelope, Door, LittleDevil, Event, Cannonball, Ghost, \
    HellEntrance


class Level:
    def __init__(self, width, height, tiles, objects, steps):
        self.width = width
        self.height = height
        self.tiles = tiles
        self.objects = objects
        self.steps = steps


def unpack_level(number):
    level_name = "%04d.level" % number
    path = join('..', 'levels', level_name)
    with open(path, 'rb') as file:
        return dill.load(file)


def pack_level(level, number):
    level_name = "%04d.level" % number
    path = join('..', 'levels', level_name)
    with open(path, 'wb') as file:
        dill.dump(level, file)


# Auxiliary functions

def check_for_existence(game, object_type):
    """
    Check whether there is a object of type in game.
    :param game: Game.
    :param object_type: Type of object.
    :return: True or False.
    """
    for layer in game.objects:
        for obj in layer.values():
            if isinstance(obj, object_type):
                return True
    return False


def flip_tiles(game, tiles, tile_1, tile_2):
    """
    For each (x, y) in tiles:
        If tile at (x, y) is 'tile_1', change it to 'tile_2'.
        Otherwise change it back to 'tile_1'.
    :param game: Game.
    :param tiles: List of coordinates.
    :param tile_1, tile_2: Tiles to interchange between.
    """
    for x, y in tiles:
        if game.tiles_map[y][x] == tile_1:
            row = game.tiles_map[y]
            game.tiles_map[y] = row[:x] + tile_2 + row[x + 1:]
        else:
            row = game.tiles_map[y]
            game.tiles_map[y] = row[:x] + tile_1 + row[x + 1:]


# Levels' data

def generate_levels():
    levels = [
        Level(6, 3,
            [
                '...l_r',
                '...__g',
                '...__b'
            ], [
                Player(1, 2),
                Ball(3, 1, 'red'),
                Ball(3, 2, 'green'),
                Ball(3, 3, 'blue'),
            ], 5
        ), Level(13, 13,
            [
                '.....###.....',
                '.....###.....',
                '.....###.....',
                '.....###.....',
                '.....#.#.....',
                '.............',
                '.............',
                '.............',
                '.....#.#.....',
                '.....###.....',
                '..r..###..g..',
                '.....###.....',
                '.....###.....',
            ], [
                Player(7, 5),
                Ball(3, 3, 'green'),
                Ball(11, 3, 'red'),
                Box(7, 7),
                Diamond(7, 9)
            ], 175
        ), Level(8, 8,
            [
                '........',
                '......#.',
                '....._#.',
                '....._#R',
                '......#r',
                '#####.#.',
                '......#.',
                '........',
                '########'
            ], [
                Player(1, 8),
                Ball(8, 2, 'red'),
                Ball(8, 7, 'red'),
                Diamond(1, 1),
                Box(1, 3),
                Box(2, 2),
                Box(3, 1),
                Box(1, 5),
                Box(2, 4),
                Box(3, 3),
                Box(4, 2),
                Box(5, 1),
                Box(5, 5),
                Box(1, 7),
                Box(2, 8),
                Box(3, 7),
                Box(4, 8),
            ], 50
        ), Level(6, 5,
            [
                '......',
                '...RG.',
                '......',
                '......',
                '......',
            ], [
                Player(1, 2),
                Ball(4, 4, 'red'),
                Ball(2, 2, 'green'),
                Box(3, 3),
                Envelope(1, 1, "Note that magnetic pad will pull ball regardless of color. Here, if you push green "
                               "ball to the right, it will stop on red pad. You can't move ball out of pad and you "
                               "need to restart level.")
            ], 40
        ), Level(5, 5,
            [
                'u...u',
                '.....',
                '.....',
                '.....',
                'u...u',
            ], [
                Player(1, 1),
                Ball(2, 3, 'red'),
                Ball(3, 2, 'green'),
                Ball(4, 3, 'green'),
                Ball(3, 4, 'blue'),
                Diamond(3, 3),
            ], 20
        ), Level(5, 7,
            [
                '.....',
                '#####',
                'r....',
                '#####',
                'g....',
                '#####',
                'b....',
                '#####'
            ], [
                Player(1, 1),
                Ball(2, 3, 'red'),
                Ball(2, 5, 'green'),
                Ball(2, 7, 'blue'),
                Portal(5, 1, 4, 3),
                Portal(5, 3, 4, 5),
                Portal(5, 5, 4, 7),
                Portal(5, 7, 4, 1),
            ], 15
        ), Level(35, 35,
            [
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________..._______...___________',
                '___________..._______...___________',
                '___________.r._______...___________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '_____________________...___________',
                '____________l________...___________',
                '____________l________...___________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
                '___________________________________',
            ], [
                Player(12, 12),
                Ball(14, 14, 'red'),
                Portal(13, 13, 23, 14),
                Portal(23, 13, 22, 23),
                Portal(23, 23, 13, 24),
            ], 20
        ), Level(59, 59,
            [
                '...#...........#...........#...........#...#...#.....#b....',
                '.#.#.#####.###.#.#.#####.###.###.#####.#.#.#.#.#.#.#.###.#.',
                '.#r#.....#.#...#.#...#...#...#.#.....#.#.#...#.#.#.#...#g#.',
                '.#######.#.###.#.###.#####.###.#####.#.#######.#.#.###.###.',
                '.#.......#...#.#...#.....#.#.....#...#...#...#...#...#...#.',
                '.#.#########.#.#.#######.#.###.#.#.#####.#.#.#######.###.#.',
                '.#.#.....#...#.#.#.......#.....#.#...#r#...#.#.....#...#...',
                '.#.###.#.#.###.###.#.###########.###.#.#####.#.###.#.#.###.',
                '.#...#.#.#...#.....#.#...........#.#.#.#...#.#...#.#.#.#.#.',
                '.###.#.#####.#####.###.###########.#.#.#.#.#.###.#.#.#.#.#.',
                '...#...#...#...#...#...#...........#.#...#.#.#...#.#.#.#...',
                '.###.###.#.###.###.#.#########.#.#.#.#####.#.#.###.###.#.##',
                '.#...#...#...#...#.#...#.....#.#.#.#.....#.#...#.#.#...#.#.',
                '.#.###.#####.#.#.#.###.#.###.###.#######.#.#####.#.#.###.#.',
                '.#.#...#g....#.#.#...#.#.#.#.#...#...#...#...#...#...#...#.',
                '.#.#.#####.#####.#####.#.#.#.#.###.#.#.###.###.#.#####.###.',
                '.#.#.....#.....#...#...#.#...#.....#.#...#.....#.........#.',
                '.#.#####.#####.#.#.#.###.#.#########.###.###############.#.',
                '...#b..#.#...#.#.#.#.#...#.......#.....#...............#...',
                '.#####.#.###.#.###.#.###.#######.#.###################.###.',
                '.....#.#...#.#.....#...#.......#...#...#.....#.......#.#.#.',
                '####.#.###.#.#####.###.#####.#.#####.#.#.###.#.###.###.#.#.',
                '.........#.#.........#.....#.#...#...#...#.#.....#.#...#...',
                '.#########.###############.#.###.#.#######.#######.#.###.##',
                '.#.........#.........#.....#...#.#...#.......#...#.#.#.....',
                '##.###.#####.#######.#.#########.###.###.#.###.#.#.#.#####.',
                '...#...#.....#.....#.#.....#...#...#.#...#.#...#.#.#.....#.',
                '.###.###.#####.###.#.#####.#.#.###.#.#.#####.###.#.#####.#.',
                '.#r...r#...#...#.#.#.....#...#...#...#.....#.#...#...#...#.',
                '.#######.###.###.#.#.#.#.#######.#.#######.#.#.###.#.#.####',
                '.#.......#...#...#.#.#.#.......#.#.........#.#.....#.#.#...',
                '.#.#######.###.#.#.#.#.#######.#.###.#######.#########.#.##',
                '.......#...#.#.#.#.#.#...#.....#.#...#.......#.......#.#.#.',
                '########.###.#.#.#.###.#.#.#####.#####.###.###.#####.#.#.#.',
                '.......#...#...#.....#.#.#.....#...#...#...#...#...#...#...',
                '.#####.#.#.#########.###.#####.###.#.###.#.#.###.#####.###.',
                '...#g#.#.#.........#.#...#...#.#...#.#.#.#...#.........#...',
                '##.#.#.###########.#.#.#####.#.#.###.#.#.#.#####.#######.##',
                '...#.#.#...#.......#...#.....#.#.....#...#.#...#.......#...',
                '.###.#.#.#.#.###########.#.###.#.#########.#.#.###########.',
                '.#.......#...#...........#.....#.#.........#.#.............',
                '.#.#####################.#######.#.#######.#.##############',
                '.#.....#.....#.....#...#.....#...#.#r........#...#.....#...',
                '.#####.#.###.#.###.#.#.###.###.###.#########.#.###.###.#.#.',
                '.....#.#...#...#.#...#...#.#...#.#.....#.....#.....#...#.#.',
                '.###.#####.#####.#######.###.###.#####.#.#######.###.###.#.',
                '.#.#.....#...#.#.......#.....#.......#.#.......#...#.....#.',
                '.#.#####.###.#.#.###.#########.###.###.#######.###.#######.',
                '.....#.#.#...#.#.#.#.......#.....#.#.....#b..#...#.#.....#.',
                '####.#.#.#.###.#.#.###.#####.#####.#.###.###.###.#.#.###.#.',
                '...#...#.#.#...#.#...#.#.......#...#...#.......#.#....r#.#.',
                '.#.#.###.#.#.###.#.#.#.#.#######.#####.#.#######.#.#####.#.',
                '.#.#.#...#.#...#.#.#.#...#.......#.....#.#.......#.......#.',
                '.#.#.#.###.#.#.#.#.#.#####.#####.#.#.#####.###############.',
                '.#.#.#.#...#.#.....#...#...#.....#.#.#...#.#...........#...',
                '.#.#.#.#.###########.###.###.#.#.#.#.#.#.#.###.#######.#.#.',
                '.#...#.#.#.........#.#...#...#.#.#.#.#.#.#...#.....#g#.#.#.',
                '.#####.#.#.#######.###.###.###.#.#.###.#.###.#####.#.#.#.#.',
                '.....#.....#...........#.b.......#.....#...........#.....#.',
            ], [
                Player(15, 27),
                Box(27, 58),
                Diamond(5, 59),
                Diamond(49, 43),
                Diamond(59, 31),
                Ball(3, 2, 'red'),
                Ball(4, 29, 'red'),
                Ball(5, 39, 'green'),
                Ball(6, 29, 'red'),
                Ball(6, 19, 'blue'),
                Ball(12, 15, 'green'),
                Ball(31, 57, 'blue'),
                Ball(38, 43, 'red'),
                Ball(39, 9, 'red'),
                Ball(44, 49, 'blue'),
                Ball(53, 50, 'red'),
                Ball(53, 58, 'green'),
                Ball(56, 1, 'blue'),
                Ball(57, 2, 'green'),
            ], 2000
        ), Level(7, 11,
            [
                '.#r....',
                '.##....',
                '.#.....',
                '.#l____',
                '.#.....',
                '.#____l',
                '.#.....',
                '.#l____',
                '.#.....',
                '.#____l',
                '.......',
            ], [
                Player(1, 1),
                Ball(4, 1, 'red'),
                Diamond(7, 2),
                Diamond(3, 4),
                Diamond(7, 6),
                Diamond(3, 8),
                Diamond(7, 10),
                Cannon(4, 2, 'down', lwr(60), lwr(11)),
                Cannon(5, 2, 'down', lwr(60), lwr(11)),
                Cannon(6, 2, 'down', lwr(60), lwr(11)),
            ], 44
        ), Level(30, 7,
            [
                '.#..........................#.',
                '.#..........................#.',
                '.#..........................#.',
                '..............................',
                '..............................',
                '.#..........................#.',
                '.#..........................#r',
            ], [
                Player(1, 1),
                Ball(2, 5, 'red'),
                Portal(1, 7, 30, 1),
                Cannon(3, 1, 'down', lwr(100), lwr(5)),
                Cannon(4, 1, 'down', lwr(100), lwr(5)),
                Cannon(5, 1, 'down', lwr(100), lwr(5)),
                Cannon(6, 1, 'down', lwr(100), lwr(5)),
                Cannon(7, 1, 'down', lwr(100), lwr(5)),
                Cannon(8, 1, 'down', lwr(100), lwr(5)),
                Cannon(9, 1, 'down', lwr(100), lwr(5)),
                Cannon(10, 1, 'down', lwr(100), lwr(5)),
                Cannon(11, 1, 'down', lwr(100), lwr(5)),
                Cannon(12, 1, 'down', lwr(100), lwr(5)),
                Cannon(13, 1, 'down', lwr(100), lwr(5)),
                Cannon(14, 1, 'down', lwr(100), lwr(5)),
                Cannon(15, 1, 'down', lwr(100), lwr(5)),
                Cannon(16, 1, 'down', lwr(100), lwr(5)),
                Cannon(17, 1, 'down', lwr(100), lwr(5)),
                Cannon(18, 1, 'down', lwr(100), lwr(5)),
                Cannon(19, 1, 'down', lwr(100), lwr(5)),
                Cannon(20, 1, 'down', lwr(100), lwr(5)),
                Cannon(21, 1, 'down', lwr(100), lwr(5)),
                Cannon(22, 1, 'down', lwr(100), lwr(5)),
                Cannon(23, 1, 'down', lwr(100), lwr(5)),
                Cannon(24, 1, 'down', lwr(100), lwr(5)),
                Cannon(25, 1, 'down', lwr(100), lwr(5)),
                Cannon(26, 1, 'down', lwr(100), lwr(5)),
                Cannon(27, 1, 'down', lwr(100), lwr(5)),
                Cannon(28, 1, 'down', lwr(100), lwr(5)),
            ], 25
        ), Level(9, 9,
            [
                'u.u...u.u',
                '.........',
                'u.u...u.u',
                '.........',
                '.........',
                '.........',
                'u.u...u.u',
                '.........',
                'u.u...u.u',
            ], [
                Player(1, 1),
                Ball(2, 3, 'red'),
                Ball(3, 2, 'green'),
                Ball(4, 3, 'green'),
                Ball(3, 4, 'blue'),
                Diamond(3, 3),
                Ball(6, 3, 'blue'),
                Ball(7, 2, 'green'),
                Ball(8, 3, 'blue'),
                Ball(7, 4, 'red'),
                Diamond(7, 3),
                Ball(2, 7, 'blue'),
                Ball(3, 6, 'green'),
                Ball(4, 7, 'green'),
                Ball(3, 8, 'red'),
                Diamond(3, 7),
                Ball(6, 7, 'red'),
                Ball(7, 6, 'blue'),
                Ball(8, 7, 'green'),
                Ball(7, 8, 'blue'),
                Diamond(7, 7),
                Box(5, 5)
            ], 150
        ), Level(25, 25,
            [
                '______._____._____.______',
                '_________________________',
                '__...___...___...___...__',
                '__.~._~_.~.lll.~.lll.~.__',
                '__...___...___...___...__',
                '___l_________________l___',
                '.__l___________~_____l___',
                '___l_________________l___',
                '__...___...___.B.___...__',
                '__.~.lll...lll...lll.~.__',
                '__...___...___...___...__',
                '_________l_____l_________',
                '.__~_____l_____l_____~___',
                '_________l_____l_________',
                '__...___...___...___...__',
                '__.~.lll.~._~_.~.lll.~.__',
                '__...___...___...___...__',
                '___l___________l_____l___',
                '.__l_____~_____l_____l___',
                '___l___________l_____l___',
                '__...___...___...___...__',
                '__.~.___.~.lll...___.~.__',
                '__...___...___...___...__',
                '_________________________',
                '_________________________',
            ], [
                Player(4, 22),
                Ball(4, 4, 'blue'),
                Diamond(4, 10),
                Diamond(4, 16),
                Diamond(10, 4),
                Diamond(10, 10),
                Diamond(10, 16),
                Diamond(10, 22),
                Diamond(16, 4),
                Diamond(16, 10),
                Diamond(16, 16),
                Diamond(16, 22),
                Diamond(22, 4),
                Diamond(22, 10),
                Diamond(22, 16),
                Diamond(22, 22),
                Cannon(1, 7, 'right', lwr(45), lwr(8)),
                Cannon(1, 13, 'right', lwr(45), lwr(8)),
                Cannon(1, 19, 'right', lwr(45), lwr(8)),
                Cannon(7, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
                Cannon(13, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
                Cannon(19, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
            ], 350
        ), Level(10, 10,
            [
                '__________',
                '___l______',
                '__..~.llB_',
                '__l_____l_',
                '_..____#l_',
                '_........_',
                '__.__l__._',
                '__._____._',
                '.~~~ll~~.~',
                '~~~.__~~~~',
            ], [
                Player(1, 10),
                Diamond(9, 3),
                Ball(2, 9, 'blue'),
                Box(4, 9),
                Envelope(2, 10, "Lily leaves are very delicate. Pushing a box onto one will cause both lily "
                                "and box to drown.")
            ], 100
        ), Level(25, 25,
            [
                '_________________________',
                '_R___#####___#####___ll__',
                '_g___#...#___#..###__ll__',
                '_b___#...#___#....##..l__',
                '_____#.._____#.##.....l__',
                '_____#...____#..#.#.#.___',
                '_____#...___....#...#.___',
                '_____#....__.##.#####.___',
                '_____#....__..#.##..#.___',
                '_____#...___........#.___',
                '_____#.~___...#####.#.___',
                '_____#~~__..........#..#_',
                '____~~~~~~........#....#_',
                '____~##############l####_',
                '____~~~~___________l_____',
                '_____~~____________l_____',
                '___________________l_____',
                '___________________l_____',
                '___________________l_____',
                '___________________l_____',
                '__l________________l_____',
                '______~~~~~~_______l_____',
                '_~~~~~~~...~~~~~~~~~~____',
                '~~~~...............~~~~~_',
                '~~...................~~~~'
            ], [
                Player(1, 25),
                Diamond(5, 15),
                Diamond(6, 15),
                Diamond(7, 15),
                Diamond(8, 15),
                Diamond(6, 16),
                Diamond(7, 16),
                Diamond(22, 2),
                Diamond(23, 2),
                Diamond(22, 3),
                Diamond(23, 3),
                Diamond(23, 4),
                Diamond(23, 5),
                Diamond(25, 25),
                Diamond(24, 25),
                Diamond(23, 25),
                Diamond(22, 25),
                Diamond(24, 24),
                Diamond(23, 24),
                Ball(8, 4, 'blue'),
                Ball(17, 4, 'red'),
                Ball(20, 6, 'green'),
            ], 400
        ), Level(14, 13,
            [
                '.............r',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '..............',
                '.............r',
            ], [
                Player(1, 1),
                Ball(14, 7, 'red'),
                Cannon(1, 5, 'right', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(1, 6, 'right', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(1, 7, 'right', lwr(150), lwr(4)),
                Cannon(1, 8, 'right', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(1, 9, 'right', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(13, 5, 'left', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(13, 6, 'left', lwr(150), lwr(4)),
                Cannon(13, 7, 'left', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(13, 8, 'left', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(13, 9, 'left', lwr(150), lwr(4)),
                Cannon(5, 1, 'down', lwr(150), lwr(4)),
                Cannon(6, 1, 'down', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(7, 1, 'down', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(8, 1, 'down', lwr(150), lwr(4)),
                Cannon(9, 1, 'down', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(5, 13, 'up', lwr(150), lwr(4)),
                Cannon(6, 13, 'up', lambda x: 100 if x == 0 else 150, lwr(4)),
                Cannon(7, 13, 'up', lambda x: 50 if x == 0 else 150, lwr(4)),
                Cannon(8, 13, 'up', lwr(150), lwr(4)),
                Cannon(9, 13, 'up', lambda x: 100 if x == 0 else 150, lwr(4)),
                Diamond(5, 5),
                Diamond(5, 6),
                Diamond(5, 7),
                Diamond(5, 8),
                Diamond(5, 9),
                Diamond(6, 5),
                Diamond(6, 6),
                Diamond(6, 7),
                Diamond(6, 8),
                Diamond(6, 9),
                Diamond(7, 5),
                Diamond(7, 6),
                Diamond(7, 7),
                Diamond(7, 8),
                Diamond(7, 9),
                Diamond(8, 5),
                Diamond(8, 6),
                Diamond(8, 7),
                Diamond(8, 8),
                Diamond(8, 9),
                Diamond(9, 5),
                Diamond(9, 6),
                Diamond(9, 7),
                Diamond(9, 8),
                Diamond(9, 9),
            ], 125
        ), Level(7, 7,
            [
                '~~~~~~~',
                '~~~~~~~',
                '~~~~~~~',
                '~~~~~~~',
                '~~~__#~',
                '~~___#~',
                '~____#r',
            ], [
                Player(1, 1),
                Ball(7, 6, 'red'),
                Envelope(2, 1, "Push all boxes into water to open the door."),
                Box(2, 5),
                Box(2, 6),
                Box(3, 3),
                Box(4, 3),
                Box(3, 4),
                Box(3, 5),
                Box(5, 3),
                Box(5, 4),
                Box(6, 3),
                Box(6, 2),
                Door(7, 5, {
                    'condition_on_update': lambda x, _: not check_for_existence(x, Box)
                })
            ], 64
        ), Level(10, 10,
            [
                '..........',
                '..........',
                '.....~....',
                '....#.....',
                '....#.....',
                '....#.#...',
                '....###___',
                '..........',
                '..........',
                '.........r',
            ], [
                Player(6, 6),
                LittleDevil(9, 7, 4),
                Ball(6, 4, 'red')
            ], 25
        ), Level(20, 20,
            [
                'b............#######',
                '############.#######',
                '##..########.#######',
                '##.#########.#######',
                '##...........#######',
                '##.#################',
                '##.######_..._######',
                '##.######_.#._######',
                '##.######_..._######',
                '##.########.########',
                '##.########.########',
                '##.___#####.........',
                '##.lll.#######.####.',
                '##.___.#######.####.',
                '##.###.############.',
                '#..###.############.',
                '######.############.',
                '######.############.',
                '######.############.',
                '######..............',
            ], [
                Player(10, 1),
                LittleDevil(3, 1, 8),
                Ball(2, 1, 'blue'),
                Diamond(13, 2),
                Diamond(4, 3),
                Diamond(2, 16),
                Diamond(15, 14)
            ], 250
        ), Level(40, 3,
            [
                '........................................',
                '........................................',
                'r.......................................',
            ], [
                Player(9, 2),
                LittleDevil(3, 1, 8),
                LittleDevil(3, 2, 7),
                LittleDevil(3, 3, 6),
                Ball(1, 2, 'red')
            ], 50
        ), Level(12, 12,
            [
                '...........#',
                '...........#',
                '...........#',
                '...........#',
                '...........#',
                '............',
                '............',
                '...........#',
                '............',
                '..........#.',
                '..........#.',
                '#####..####r',
            ], [
                Player(1, 1),
                Envelope(2, 1, "Destroy all little devils! Make use of cannons."),
                Ball(12, 11, 'red'),
                Door(12, 10, {
                    'condition_on_update': lambda x, _: not check_for_existence(x, LittleDevil)
                }),
                Cannon(6, 12, 'up', lwr(120), lwr(12)),
                Cannon(7, 12, 'up', lwr(120), lwr(12)),
                Cannon(12, 6, 'left', lambda x: 60 if x == 0 else 120, lwr(12)),
                Cannon(12, 7, 'left', lambda x: 60 if x == 0 else 120, lwr(12)),
                LittleDevil(12, 1, 4, 1),
                LittleDevil(1, 12, 4, 1),
                LittleDevil(6, 6, 4, 1)
            ], 50
        ), Level(25, 25,
            [
                '______._____._____.______',
                '_B____________________.._',
                '__...___...___...___...._',
                '__...lll...lll...lll...__',
                '__...___..._l_...___...__',
                '___l_____l__l__l_____l___',
                '.__l_____l__l__l_________',
                '___l_____l__l__l_____l___',
                '__...___..._l_...___...__',
                '__...lll...lll...lll...__',
                '__...___...___...___...__',
                '___l_____l_____l_____l___',
                '.________l_____l_____l___',
                '___l_____l_____l_____l___',
                '__...___...___...___...__',
                '__...lll...lll...l_l...__',
                '__...___...___...___...__',
                '___l_____l_____l_____l___',
                '.__l_____lllllll_____l___',
                '___l_____l_____l_____l___',
                '__...___...___...___...__',
                '__...lll...l_l...lll...__',
                '__...___...___...___...__',
                '_________________________',
                '_________________________',
            ], [
                Player(4, 22),
                LittleDevil(1, 25, 6, 1),
                LittleDevil(9, 7, 6, 1),
                LittleDevil(14, 7, 6, 1),
                LittleDevil(19, 7, 6, 1),
                LittleDevil(14, 12, 6, 1),
                LittleDevil(19, 12, 6, 1),
                LittleDevil(19, 17, 6, 1),
                Ball(23, 2, 'blue'),
                Cannon(1, 7, 'right', lwr(45), lwr(8)),
                Cannon(1, 13, 'right', lwr(45), lwr(8)),
                Cannon(1, 19, 'right', lwr(45), lwr(8)),
                Cannon(7, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
                Cannon(13, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
                Cannon(19, 1, 'down', lambda x: 70 if x == 0 else 45, lwr(8)),
                Door(24, 3, {
                    'condition_on_update': lambda x, _: not check_for_existence(x, LittleDevil)
                }),
            ], 100
        ), Level(12, 12,
            [
                '########__._',
                '########__._',
                '########____',
                '########____',
                '########____',
                '.......#____',
                '.~.~.~.#____',
                '.......#____',
                '.~...~.#____',
                '.......#____',
                '.~.~.~......',
                '.......#..g.',
            ], [
                Player(4, 9),
                Ball(11, 2, 'green'),
                Event(2, 7, lambda game, _: flip_tiles(game, [(10, 4), (10, 6), (10, 7)], '_', 'l'), 0),
                Event(4, 7, lambda game, _: flip_tiles(game, [(10, 2), (10, 3), (10, 4)], '_', 'l'), 0),
                Event(6, 7, lambda game, _: flip_tiles(game, [(10, 1), (10, 6), (10, 8)], '_', 'l'), 0),
                Event(2, 9, lambda game, _: flip_tiles(game, [(10, 5), (10, 9), (10, 10)], '_', 'l'), 0),
                Event(6, 9, lambda game, _: flip_tiles(game, [(10, 2), (10, 3), (10, 6)], '_', 'l'), 0),
                Event(2, 11, lambda game, _: flip_tiles(game, [(10, 1), (10, 4), (10, 9)], '_', 'l'), 0),
                Event(4, 11, lambda game, _: flip_tiles(game, [(10, 2), (10, 3)], '_', 'l'), 0),
                Event(6, 11, lambda game, _: flip_tiles(game, [(10, 1), (10, 8)], '_', 'l'), 0),
            ], 50
        ), Level(9, 55,
            [
                '#___g___#',
                '#___.___#',
                '#___.___#',
                '#___.___#',
                '#___.___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#__l.___#',
                '#___~___#',
                '#___.___.',
                '.___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '#___.___#',
                '#___~___#',
                '#___.___#',
                '.___.___#',
                '#___.___#',
                '#___.___#',
                '#___.___#',
            ], [
                Player(5, 55),
                Envelope(5, 54, "Watch out for traps!"),
                Ball(5, 8, 'green'),
                Cannon(1, 52, 'right', lwr(40), lwr(12)),
                Event(5, 50, lambda game, _: game.register_object(Cannonball(2, 49, 'right', 12))),
                Event(5, 47, lambda game, _: (
                    game.register_object(Cannonball(2, 47, 'right', 12)),
                    game.register_object(Cannonball(2, 46, 'right', 12))
                )),
                Event(5, 41, lambda game, _: (
                    game.register_object(Cannonball(2, 41, 'right', 12)),
                    game.register_object(Cannonball(2, 42, 'right', 12))
                )),
                Event(5, 38, lambda game, _: (
                    game.register_object(Cannonball(8, 37, 'left', 12)),
                    game.register_object(Cannonball(8, 39, 'left', 12)),
                    Timer(0.3, game.register_object, [Cannonball(8, 39, 'left', 12)]).start(),
                    Timer(0.3, game.register_object, [Cannonball(8, 38, 'left', 12)]).start(),
                    Timer(0.3, game.register_object, [Cannonball(8, 36, 'left', 12)]).start(),
                    Timer(0.6, game.register_object, [Cannonball(8, 36, 'left', 12)]).start(),
                    Timer(0.6, game.register_object, [Cannonball(8, 37, 'left', 12)]).start(),
                )),
                Event(5, 29, lambda game, _: (
                    game.register_object(Diamond(5, 34)),
                    game.register_object(Event(5, 32, lambda _, __: (
                        game.register_object(Cannonball(8, 33, 'left', 12)),
                        game.register_object(Cannonball(2, 31, 'right', 12)),
                    ), 0))
                )),
                Cannon(1, 28, 'right', lwr(40), lwr(12)),
                Cannon(9, 27, 'left', lwr(45), lwr(12)),
                Event(5, 23, lambda game, _: (
                    game.register_object(Cannonball(2, 22, 'right', 12)),
                    game.register_object(Cannonball(8, 24, 'left', 12))
                )),
                Event(5, 20, lambda game, _: game.register_object(Cannonball(5, 13, 'down', 12))),
                Event(5, 17, lambda game, _: (
                    game.register_object(Cannonball(8, 16, 'left', 12)),
                    game.register_object(Cannonball(2, 18, 'right', 12))
                )),
                Event(5, 11, lambda game, _: (
                    game.register_object(Cannonball(8, 10, 'left', 12)),
                    Timer(0.3, game.register_object, [Cannonball(8, 10, 'left', 12)]).start(),
                    Timer(0.3, game.register_object, [Cannonball(2, 12, 'right', 12)]).start(),
                    Timer(0.6, game.register_object, [Cannonball(8, 10, 'left', 12)]).start(),
                    Timer(0.6, game.register_object, [Cannonball(2, 12, 'right', 12)]).start(),
                    Timer(0.9, game.register_object, [Cannonball(8, 10, 'left', 12)]).start(),
                    Timer(0.9, game.register_object, [Cannonball(2, 12, 'right', 12)]).start(),
                    Timer(1.2, game.register_object, [Cannonball(8, 10, 'left', 12)]).start(),
                    Timer(1.2, game.register_object, [Cannonball(2, 11, 'right', 12)]).start(),
                )),
                Event(5, 8, lambda game, _: (
                    game.register_object(Cannonball(2, 7, 'right', 12)),
                    game.register_object(Cannonball(2, 8, 'right', 12)),
                    game.register_object(Cannonball(2, 9, 'right', 12)),
                ))
            ], 75
        ), Level(7, 7,
            [
                '.._._..',
                '.._._..',
                '___.___',
                '.......',
                '___.___',
                '.._._..',
                'r._._.g',
            ], [
                Player(1, 4, lambda game: game.player.add_item(LilyPlant(), 3)),
                Ball(2, 2, 'green'),
                Ball(6, 2, 'red'),
                Ghost(1, 1, 7, [(7, 1), (7, 7), (1, 7)]),
                Ghost(2, 2, 5, [(2, 6), (6, 6), (6, 2)]),
                Ghost(3, 3, 3, [(5, 3), (5, 5), (3, 5)]),
                Envelope(4, 4, "To pass this level, you need to use items! Press H to see your equipment. "
                               "To switch between items, use Z and X. To use item, press Space. "
                               "At the moment, you have four lily plants. Stand next to the water to place them.")
            ], 50
        ), Level(45, 45,
            [
                '_~__~__~__~__~__~__~__~__~__~__~__~__~____..r',
                '__________________________________________...',
                '.............................................',
                '...........................................__',
                '...........................................__',
                '.....................___...................__',
                '................_____________________________',
                '....._______________________..............._~',
                '..............______.......................__',
                '...........................................__',
                '..........................................._~',
                '..___......................................__',
                '________.......__________________..........__',
                '________________..........................._~',
                '..._______lllll____........................__',
                '....._____l___llllll_____________________..__',
                '........__l_________________________________~',
                '__________lllll___lllllll_llllllll___________',
                '______________lllll_____lll______l___________',
                '_____________________######______l_____l__._~',
                '.........######______lllllll__llll_____ll____',
                '.........#___lllllllll_____llll_________l____',
                '........l#__ll#__________________.........._~',
                '......._lllll_#...............____.........__',
                '.....____######..___...........___.........__',
                '............__...._____.........__........._~',
                '...____.....__........#####....___...____..__',
                '____##.....___........#####....___._____...__',
                '...........______.....#####....__lll___...._~',
                '.....##....__lll_____...._____..ll____.....__',
                '.....#_...___l_lllll____.________#_______..__',
                '.....#_..__#.._____llllll___..___.........._~',
                '.....#_____#......________....###..........__',
                '....._______..................___.....____.__',
                '............######___..........__...________~',
                '..................___###.......__..__________',
                '...............................##..........__',
                '______________________#........._.........._~',
                '....................###_________________l____',
                '......................................._l____',
                '#####...........####......................._~',
                '....#...........................#..........__',
                '....#......................................__',
                '....#....................###..............._~',
                '....#......................................__'
            ], [
                Ball(45, 2, 'red'),
                Envelope(3, 43, "Prepare for invasion! Be careful though, you can't shoot while moving."),
                Player(1, 45, lambda game: (
                    game.player.add_item(Gun(), 99),
                    Timer(10.0, flip_tiles, (game, [(1, 41), (2, 41), (3, 41), (4, 41), (5, 41),
                                                   (5, 42), (5, 43), (5, 44), (5, 45)], '#', '.')).start()
                )),
                HellEntrance(2, 1, 460, 1.5),
                HellEntrance(5, 1, 460, 1.5),
                HellEntrance(8, 1, 775, 2.5),
                HellEntrance(11, 1, 460, 1.5),
                HellEntrance(14, 1, 460, 1.5),
                HellEntrance(17, 1, 775, 2.5),
                HellEntrance(20, 1, 460, 1.5),
                HellEntrance(23, 1, 460, 1.5),
                HellEntrance(26, 1, 775, 2.5),
                HellEntrance(29, 1, 460, 1.5),
                HellEntrance(32, 1, 460, 1.5),
                HellEntrance(35, 1, 775, 2.5),
                HellEntrance(38, 1, 990, 1.5),
                HellEntrance(45, 8, 990, 1.5),
                HellEntrance(45, 11, 775, 2.5),
                HellEntrance(45, 14, 460, 1.5),
                HellEntrance(45, 17, 460, 1.5),
                HellEntrance(45, 20, 775, 2.5),
                HellEntrance(45, 23, 460, 1.5),
                HellEntrance(45, 26, 460, 1.5),
                HellEntrance(45, 29, 775, 2.5),
                HellEntrance(45, 32, 460, 1.5),
                HellEntrance(45, 35, 460, 1.5),
                HellEntrance(45, 38, 775, 2.5),
                HellEntrance(45, 41, 460, 1.5),
                HellEntrance(45, 44, 460, 1.5),
                HellEntrance(1, 11, 775, 2.5),
                HellEntrance(1, 14, 460, 1.5),
                HellEntrance(1, 17, 460, 1.5),
                HellEntrance(1, 20, 775, 2.5),
                HellEntrance(1, 23, 460, 1.5),
                HellEntrance(1, 26, 460, 1.5),
                HellEntrance(1, 29, 775, 2.5),
            ], 400
        ),
    ]
    path = join('..', 'levels')
    if not exists(path):
        makedirs(path)
    for i in range(len(levels)):
        pack_level(levels[i], i)
